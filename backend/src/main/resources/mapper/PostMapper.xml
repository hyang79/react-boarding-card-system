<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.loginbackend.mapper.PostMapper">

    <!-- Result Map -->
    <resultMap id="PostResultMap" type="com.example.loginbackend.entity.Post">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="authorId" column="author_id"/>
        <result property="authorName" column="author_name"/>
        <result property="authorEmail" column="author_email"/>
        <result property="viewCount" column="view_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 게시글 목록 조회 (페이징) -->
    <select id="findAll" resultMap="PostResultMap">
        SELECT id, title, content, author_id, author_name, author_email, 
               view_count, created_at, updated_at
        FROM posts
        ORDER BY created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 전체 게시글 수 조회 -->
    <select id="countAll" resultType="long">
        SELECT COUNT(*) FROM posts
    </select>

    <!-- 키워드로 게시글 검색 (페이징) -->
    <select id="findByKeyword" resultMap="PostResultMap">
        SELECT id, title, content, author_id, author_name, author_email, 
               view_count, created_at, updated_at
        FROM posts
        WHERE title LIKE CONCAT('%', #{keyword}, '%') 
           OR content LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 키워드로 검색된 게시글 수 조회 -->
    <select id="countByKeyword" resultType="long">
        SELECT COUNT(*)
        FROM posts
        WHERE title LIKE CONCAT('%', #{keyword}, '%') 
           OR content LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- ID로 게시글 조회 -->
    <select id="findById" resultMap="PostResultMap">
        SELECT id, title, content, author_id, author_name, author_email, 
               view_count, created_at, updated_at
        FROM posts
        WHERE id = #{id}
    </select>

    <!-- 게시글 저장 -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO posts (title, content, author_id, author_name, author_email, 
                          view_count, created_at, updated_at)
        VALUES (#{title}, #{content}, #{authorId}, #{authorName}, #{authorEmail}, 
                0, NOW(), NOW())
    </insert>

    <!-- 게시글 업데이트 -->
    <update id="update">
        UPDATE posts
        SET title = #{title},
            content = #{content},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteById">
        DELETE FROM posts WHERE id = #{id}
    </delete>

    <!-- 조회수 증가 -->
    <update id="incrementViewCount">
        UPDATE posts
        SET view_count = view_count + 1
        WHERE id = #{id}
    </update>

    <!-- 작성자 ID로 게시글 목록 조회 -->
    <select id="findByAuthorId" resultMap="PostResultMap">
        SELECT id, title, content, author_id, author_name, author_email, 
               view_count, created_at, updated_at
        FROM posts
        WHERE author_id = #{authorId}
        ORDER BY created_at DESC
    </select>

</mapper>